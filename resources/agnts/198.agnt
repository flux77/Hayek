{:agnt {:fn (fn [period] (nth_AND (map_= (apply (fn [macd signal hist] (crosses signal macd)) (apply concat [(MACD period 7 31 11) nil])) 2) (nth_AND (map_= (apply (fn [macd signal hist] (crosses signal macd)) (apply concat [(MACD period 7 31 10) nil])) 2) (map_= (apply (fn [pos neg upper lower] (map (fn [n] (cond (and (> (nth pos n) upper) (< (nth neg n) lower)) 1 (and (> (nth neg n) upper) (> (nth pos n) lower)) 2 :else 0)) (range (count pos)))) (apply concat [(Aroon period 15) [51 67]])) 2)))), :wallet 1000, :bid_fn only-long-bids, :atr_dist 1.3171600217741721, :atr_candles 14, :closing_fn trailing-stop-ATR, :parents nil, :archive [], :fn_tree {:gate {:name :AND, :num-inp 2, :fn nth_AND, :0 {:gate {:name :AND, :num-inp 2, :fn nth_AND, :0 {:indicator {:name "Aroon", :args (15), :data [Aroon], :method {:desc "one above and other below 50", :fn (fn [pos neg upper lower] (map (fn [n] (cond (and (> (nth pos n) upper) (< (nth neg n) lower)) 1 (and (> (nth neg n) upper) (> (nth pos n) lower)) 2 :else 0)) (range (count pos)))), :params [[upper 50] [lower 50]], :type :flag, :range [1 2], :protocol {:desc "flag_=", :fn map_=, :param-fns [(fn [range] (rand-nth range))], :params (2)}, :args [51 67]}}}, :1 {:indicator {:name "MACD", :args (7 31 10), :data [MACD], :method {:desc "which-crossed", :fn (fn [macd signal hist] (crosses signal macd)), :type :flag, :range [1 2], :protocol {:desc "flag_=", :fn map_=, :param-fns [(fn [range] (rand-nth range))], :params (2)}, :args nil}}}}}, :1 {:indicator {:name "MACD", :args (7 31 11), :data [MACD], :method {:desc "which-crossed", :fn (fn [macd signal hist] (crosses signal macd)), :type :flag, :range [1 2], :protocol {:desc "flag_=", :fn map_=, :param-fns [(fn [range] (rand-nth range))], :params (2)}, :args nil}}}}}}, :id 198, :num_trades (7 11 18 32 17 27 31 21 28 21 27 24 26 27 32 23 20 21), :risk (6.405136882847777E-4 2.3894736831794435E-4 2.2864446172947672E-4 2.1935666399738535E-4 1.9969019552227768E-4 2.0461936063362373E-4 1.3104009356088494E-4 1.4165884423080526E-4 1.873922698238824E-4 1.1608875559375181E-4 1.6695207063390142E-4 1.6158970202706375E-4 1.590349108470656E-4 1.303003503759018E-4 1.778097558691764E-4 1.2251220181792844E-4 1.8823977061619023E-4 1.98380646675113E-4), :reward (3.8213979663974165E-5 4.124129775176851E-5 1.864945577638639E-4 2.2900938030360451E-4 4.159345413679207E-4 7.743093346706609E-5 4.093909140885925E-5 nil 2.8050481120911253E-5 7.953520978756443E-5 3.155336128547467E-4 2.5831982915614847E-5 9.564804695174271E-5 5.450673337355631E-5 4.030379211418889E-5 1.2349569939941945E-4 3.498998540715765E-4 5.949872160890827E-5), :num_won (1 1 3 3 4 1 4 0 3 3 1 1 5 2 3 4 1 2), :num_lost (6 10 15 29 13 26 27 21 25 18 26 23 21 25 29 19 19 19), :exposure (100.56744059378069 57.938857733374256 6.1300572110791105 9.259217893885324 1.5603251735549573 68.70772620527727 21.60577094157401 10 55.671139535934735 8.75753688741028 13.756866652681047 143.87448144276559 6.983379659541552 29.881709632758053 42.6467969862219 4.712171852665306 10.221655139575978 31.6749014508474)}