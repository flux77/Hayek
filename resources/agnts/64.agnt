{:agnt {:fn (fn [period] (nth_AND (map_= (apply (fn [macd signal hist] (sign (diff hist))) (apply concat [(MACD period 19 24 12) nil])) -1) (map_= (apply (fn [cci thresh] (loop [res [0] cci cci] (if (= 1 (count cci)) res (recur (conj res (cond (and (> (first cci) thresh) (< (second cci) thresh)) 2 (and (< (first cci) (* -1 thresh)) (> (second cci) (* -1 thresh))) 1 :else 0)) (rest cci))))) (apply concat [(CCI period 23) [98]])) 1))), :wallet 1000, :bid_fn only-long-bids, :atr_dist 3.7774645671240776, :atr_candles 14, :closing_fn trailing-stop-ATR, :parents nil, :archive [], :fn_tree {:gate {:name :AND, :num-inp 2, :fn nth_AND, :0 {:indicator {:name "CCI", :args (23), :data [CCI], :method {:desc "reversal at extreme", :fn (fn [cci thresh] (loop [res [0] cci cci] (if (= 1 (count cci)) res (recur (conj res (cond (and (> (first cci) thresh) (< (second cci) thresh)) 2 (and (< (first cci) (* -1 thresh)) (> (second cci) (* -1 thresh))) 1 :else 0)) (rest cci))))), :params [[thresh 100]], :type :flag, :range [1 2], :protocol {:desc "flag_=", :fn map_=, :param-fns [(fn [range] (rand-nth range))], :params (1)}, :args [98]}}}, :1 {:indicator {:name "MACD", :args (19 24 12), :data [MACD], :method {:desc "sign of angle", :fn (fn [macd signal hist] (sign (diff hist))), :type :flag, :range [-1 1], :protocol {:desc "flag_=", :fn map_=, :param-fns [(fn [range] (rand-nth range))], :params (-1)}, :args nil}}}}}}, :id 64, :num_trades (6 27 21 31 31 25 27 28 24 25 29 21 30 26 26 28 28 20), :risk (0.0013826193333638063 6.730081803309381E-4 3.046564977058987E-4 2.793250852598351E-4 2.513204258273901E-4 3.1853459432759385E-4 2.59114234702753E-4 2.6393642643511486E-4 2.2971304274821785E-4 2.431051258191952E-4 3.111621629255879E-4 2.497820697273111E-4 2.890703151338262E-4 2.439456829314574E-4 2.3492769284962078E-4 2.7303360985462464E-4 3.146268598468636E-4 2.702959478136941E-4), :reward (nil 4.954412519323271E-4 7.359109781334998E-4 3.776035551084931E-4 4.98203494345606E-4 3.075784912369956E-4 2.788803231908063E-4 1.5546929870689658E-4 5.991333362432357E-4 5.018446016104249E-4 2.8161727109345E-4 3.728599456351495E-4 3.4208182170913465E-4 3.384396890633094E-4 2.0374750299015983E-4 4.8193306353515596E-4 3.1489278302756764E-4 6.259347574805281E-4), :num_won (0 11 7 13 12 9 9 11 10 10 6 11 14 7 9 10 10 5), :num_lost (6 16 14 18 19 16 18 17 14 15 23 10 16 19 17 18 18 15), :exposure (10 1.975856846304727 0.8279710637789445 1.0242430324805822 0.7987178172700502 1.841103131014198 1.8582468044937712 2.6236803879471227 0.5367724351044002 0.7266346744761272 4.235494103694183 0.6090077829523873 0.9657516227786058 1.9564439503981048 2.1779521329269094 1.019769206398252 1.798479921576274 1.295483009611122)}