{:agnt {:fn (fn [period] (nth_AND (map_= (apply (fn [period sar] (let [open (take-last (count sar) (map (fn [r] (nth r 1)) period))] (sign (map (fn [n] (- (nth open n) (nth sar n))) (range (count sar)))))) (apply concat [[period] (SAR period 6 6) nil])) 1) (map_= (apply sign-change (apply concat [(ADL period 7 26) nil])) 2))), :wallet 1000, :bid_fn only-long-bids, :atr_dist 1.3595955967246953, :atr_candles 14, :closing_fn trailing-stop-ATR, :parents nil, :archive [], :fn_tree {:gate {:name :AND, :num-inp 2, :fn nth_AND, :0 {:indicator {:name "ADL", :args (7 26), :data [ADL], :method {:desc "sign-change", :fn sign-change, :type :flag, :range [1 2], :protocol {:desc "flag_=", :fn map_=, :param-fns [(fn [range] (rand-nth range))], :params (2)}, :args nil}}}, :1 {:indicator {:name "SAR", :args (6 6), :data [SAR], :method {:desc "above/below price", :fn (fn [period sar] (let [open (take-last (count sar) (map (fn [r] (nth r 1)) period))] (sign (map (fn [n] (- (nth open n) (nth sar n))) (range (count sar)))))), :period true, :type :flag, :range [-1 1], :protocol {:desc "flag_=", :fn map_=, :param-fns [(fn [range] (rand-nth range))], :params (1)}, :args nil}}}}}}, :id 48, :num_trades (14 42 42 37 38 37 36 37 39 33 44 38 39 45 40 43 40 40), :risk (5.347071472386346E-4 1.8901949848757393E-4 1.4518093225195924E-4 1.3133094039066937E-4 1.390344489728855E-4 1.1345153680261748E-4 9.503433549056997E-5 9.78791792137105E-5 1.3400719374942073E-4 1.2716466203341548E-4 1.225162869129045E-4 1.31297572687043E-4 1.1831050467220863E-4 1.0212186287666263E-4 1.0184028088993879E-4 1.1248416002252162E-4 1.462955483312255E-4 9.035879129575046E-5), :reward (7.449807116115437E-4 2.556880867915743E-4 1.644479543456387E-4 9.565466462996963E-5 6.46069094501939E-5 1.559290095188742E-4 1.1316747440032288E-4 2.5534032127749273E-4 1.294513319262382E-4 1.3416503899257398E-4 1.7067056038927152E-4 9.983283654104328E-5 8.59295998024833E-5 1.6144581205472264E-4 1.5134235371079023E-4 8.696580115751799E-5 7.097951081214646E-5 9.835144076409907E-5), :num_won (8 15 4 9 4 10 7 11 14 4 14 10 9 9 12 8 12 8), :num_lost (6 27 38 28 34 27 29 26 25 29 30 28 30 36 28 35 28 32), :exposure (0.5383097228939879 1.330664645142336 8.38696268300641 4.271460774679967 18.29204997308504 1.9644782604098385 3.4790356300702823 0.9060487825617823 1.8485600472861556 6.871714171329626 1.5382553378207318 3.682487809234781 4.589435419388107 2.5301830150180185 1.5701310059616296 5.658755436601754 4.8092227677217405 3.6749351344015637)}